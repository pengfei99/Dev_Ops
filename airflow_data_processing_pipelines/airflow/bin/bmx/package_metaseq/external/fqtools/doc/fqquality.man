.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "FQQUALITY 1"
.TH FQQUALITY 1 "2011-11-29" "Unix" "User Manuals"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
.IP "\fBfqquality\fR \- FastQ sequence quality filter" 4
.IX Item "fqquality - FastQ sequence quality filter"
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.PD 0
.IP "\fBfqquality\fR [options] \-i \fIfile\fR [\fIfile\fR]" 4
.IX Item "fqquality [options] -i file [file]"
.PD
.SH "OPTIONS"
.IX Header "OPTIONS"
Following command line options are allowed:
.IP "\-b \fIvalue\fR" 4
.IX Item "-b value"
Overall bad quality maximum percent. Default to 100.0%.
.IP "\-d" 4
.IX Item "-d"
Decrease low quality values to minimum.
.IP "\-h" 4
.IX Item "-h"
Usage display.
.IP "\-l \fIvalue\fR" 4
.IX Item "-l value"
Minimum sequence length \fIvalue\fR. Default to 0.
.IP "\-m" 4
.IX Item "-m"
Mask low quality bases.
.IP "\-p \fIstring\fR" 4
.IX Item "-p string"
Prepend output file names with given \fIstring\fR prefix.
.IP "\-q \fIvalue\fR" 4
.IX Item "-q value"
Use \fIvalue\fR for quality cutoff. Default to 0.
.IP "\-t" 4
.IX Item "-t"
Trim low quality bases.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBfqquality\fR is a small tool that allows filtering fastq sequences on
quality criteria. For now only illumina quality model is supported.
.PP
The following methods can be applied, in sequence :
.IP "\- \fIDiscard sequences with bad overall quality percent\fR (\fB\-b\fR)" 4
.IX Item "- Discard sequences with bad overall quality percent (-b)"
Sequence where the percentage of bases below the quality cutoff is
lower than the provided value will be discarded.
.IP "\- \fIMask low quality bases\fR (\fB\-m\fR)" 4
.IX Item "- Mask low quality bases (-m)"
Bases where quality value is lower than provided cutoff, will be
masked using the `N' character.
.IP "\- \fIDecrease low quality values to minimum\fR (\fB\-d\fR)" 4
.IX Item "- Decrease low quality values to minimum (-d)"
Bases where quality value is lower than provided cutoff, will have
their value lowered to the minimum supported one (letter B).
.IP "\- \fITrim bases with low quality value on both ends\fR (\fB\-t\fR)" 4
.IX Item "- Trim bases with low quality value on both ends (-t)"
Bases where quality value is lower than provided cutoff, will be
trimmed from both sequence ends.
.IP "\- \fIDiscard sequences smaller than a specified length\fR (\fB\-l\fR)" 4
.IX Item "- Discard sequences smaller than a specified length (-l)"
Sequences where length is smaller than the provided value will be
discarded.
.PP
The results will be stored in the following files :
.PP
\&\- \fIxxxxx_1.fq\fR will hold sequences from input file 1 (single-read and
paired-ends)
.PP
\&\- \fIxxxxx_2.fq\fR will hold sequences from input file 2 (paired-ends).
.PP
\&\- \fIxxxxx_s.fq\fR will hold singlet sequences from both input files 1
and 2 (paired-ends).
.SH "AUTHOR"
.IX Header "AUTHOR"
Nicolas Joly (njoly@pasteur.fr), Institut Pasteur.

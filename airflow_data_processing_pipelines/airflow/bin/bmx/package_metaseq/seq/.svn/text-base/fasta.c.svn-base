/*
 *  fasta.c
 *
 *  $Author: veyriejb $, $Date: 2011/05/12 15:12:37 $, $Version$
 *
 *  MetagenomiX : a C package for metagenomics
 *
 *  Copyright (C) 2011  DKL Team, bioMÃ©rieux, France.
 *
 */
#include <stdint.h>
#include <stdio.h>
#include <ctype.h>

#include <gdl/gdl_common.h>
#include <gdl/gdl_errno.h>
#include <gdl/gdl_io.h>

#include"fasta.h"

static void
_totnucount (const int c, int * header, size_t * n)
{
	if (isblank (c))
	{
		return;
	}
	else if (c=='>')
	{
		*header=1;
	}
	else if ((c=='\n' || c =='\r') && (*header))
	{
		*header=0;
	}
	else if ((c!='\n' && c !='\r') && !(*header))
	{
		(*n)++;
	}
}
/**
 * Fast counting of the total number of nucleotides
 * within a fasta file
 *
 * @param stream an open stream onto a fasta file
 * @return the cumulated number of nucleotides within the file (whitespace are ignored)
 */
size_t
mgx_fasta_totnucount (FILE * stream)
{
	size_t n = 0;
	int c, header = 0;

	while ((c=fgetc(stream))!=EOF)
	{
		_totnucount (c, &header, &n);
	}
	return n;
}
/**
 * Fast counting of the total number of nucleotides
 * within a gzipped fasta file
 *
 * @param stream an open gz stream onto a fasta file
 * @return the cumulated number of nucleotides within the file (whitespace are ignored)
 */
size_t
mgx_fasta_totnucount_gz (gzFile stream)
{
	size_t n = 0;
	int c, header = 0;

	while ((c=gzgetc(stream))!=EOF)
	{
		_totnucount(c, &header, &n);
	}
	return n;
}
/**
 * Fast counting of the total number of nucleotides
 * within a fasta file (gzipped or not)
 *
 * @param filename The filename
 * @param gzip True if the file is gzipped
 * @return the cumulated number of nucleotides within the file (whitespace are ignored) or -1 if fails
 */
int
mgx_fasta_file_totnucount (const gdl_string * filename, const gdl_boolean gzip)
{
	int n = -1;

	if (gzip)
	{
		gzFile stream = gzopen (filename, "r");
		if (stream)
		{
			n = mgx_fasta_totnucount_gz (stream);
			gzclose (stream);
		}
	}
	else
	{
		FILE * stream = gdl_fileopen (filename, "r");
		if (stream)
		{
			n = mgx_fasta_totnucount (stream);
			gdl_fileclose (filename, stream);
		}
	}

	return n;
}

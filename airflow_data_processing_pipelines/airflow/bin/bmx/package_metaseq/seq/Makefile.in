# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = mgx-seq-bfdb$(EXEEXT) mgx-seq-bfclass$(EXEEXT) \
	mgx-seq-bwabh$(EXEEXT) mgx-seq-bam2readqc$(EXEEXT) \
	mgx-seq-bam2var$(EXEEXT) mgx-seq-bam2bh$(EXEEXT) \
	mgx-seq-drawfrag$(EXEEXT) mgx-seq-faget$(EXEEXT) \
	mgx-seq-fadesc$(EXEEXT) mgx-seq-famut$(EXEEXT) \
	mgx-seq-favar$(EXEEXT) mgx-seq-fqdesc$(EXEEXT) \
	mgx-seq-fqget$(EXEEXT) mgx-seq-fq2fa$(EXEEXT) \
	mgx-seq-fa2fq$(EXEEXT) mgx-seq-fqtrim$(EXEEXT) \
	mgx-seq-fqboot$(EXEEXT) mgx-seq-fasplit$(EXEEXT) \
	mgx-seq-famergpair$(EXEEXT) mgx-seq-fa2libsvm$(EXEEXT) \
	mgx-seq-fa2vw$(EXEEXT) mgx-seq-kmertab$(EXEEXT) \
	mgx-seq-kmerdb$(EXEEXT) mgx-seq-kmernbfit$(EXEEXT) \
	mgx-seq-kmernbpred$(EXEEXT) mgx-seq-kmerdbdesc$(EXEEXT) \
	mgx-seq-uniprotid$(EXEEXT) mgx-seq-bams2pos$(EXEEXT) \
	mgx-seq-baminfo$(EXEEXT) mgx-seq-epsNB2taxons$(EXEEXT) \
	mgx-seq-fqmv$(EXEEXT) mgx-seq-fqsim$(EXEEXT)
subdir = seq
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_mgx_seq_bam2bh_OBJECTS = mgx-seq-bams2bh.$(OBJEXT)
mgx_seq_bam2bh_OBJECTS = $(am_mgx_seq_bam2bh_OBJECTS)
mgx_seq_bam2bh_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
mgx_seq_bam2bh_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_mgx_seq_bam2readqc_OBJECTS = mgx-seq-bam2refqc.$(OBJEXT)
mgx_seq_bam2readqc_OBJECTS = $(am_mgx_seq_bam2readqc_OBJECTS)
mgx_seq_bam2readqc_LDADD = $(LDADD)
mgx_seq_bam2readqc_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_mgx_seq_bam2var_OBJECTS = mgx-seq-bam2var.$(OBJEXT)
mgx_seq_bam2var_OBJECTS = $(am_mgx_seq_bam2var_OBJECTS)
mgx_seq_bam2var_LDADD = $(LDADD)
mgx_seq_bam2var_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_mgx_seq_baminfo_OBJECTS = mgx-seq-baminfo.$(OBJEXT)
mgx_seq_baminfo_OBJECTS = $(am_mgx_seq_baminfo_OBJECTS)
mgx_seq_baminfo_LDADD = $(LDADD)
mgx_seq_baminfo_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_mgx_seq_bams2pos_OBJECTS = mgx-seq-bams2pos.$(OBJEXT)
mgx_seq_bams2pos_OBJECTS = $(am_mgx_seq_bams2pos_OBJECTS)
mgx_seq_bams2pos_LDADD = $(LDADD)
mgx_seq_bams2pos_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_mgx_seq_bfclass_OBJECTS = mgx-seq-bfclass.$(OBJEXT) \
	gzutil.$(OBJEXT) hash.$(OBJEXT) bloom.$(OBJEXT) \
	fasta.$(OBJEXT)
mgx_seq_bfclass_OBJECTS = $(am_mgx_seq_bfclass_OBJECTS)
mgx_seq_bfclass_LDADD = $(LDADD)
mgx_seq_bfclass_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_mgx_seq_bfdb_OBJECTS = mgx-seq-bfdb.$(OBJEXT) gzutil.$(OBJEXT) \
	hash.$(OBJEXT) bloom.$(OBJEXT) fasta.$(OBJEXT)
mgx_seq_bfdb_OBJECTS = $(am_mgx_seq_bfdb_OBJECTS)
mgx_seq_bfdb_LDADD = $(LDADD)
mgx_seq_bfdb_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_mgx_seq_bwabh_OBJECTS = mgx-seq-bwabh.$(OBJEXT)
mgx_seq_bwabh_OBJECTS = $(am_mgx_seq_bwabh_OBJECTS)
mgx_seq_bwabh_LDADD = $(LDADD)
mgx_seq_bwabh_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_mgx_seq_drawfrag_OBJECTS = mgx-seq-drawfrag.$(OBJEXT) \
	gzutil.$(OBJEXT)
mgx_seq_drawfrag_OBJECTS = $(am_mgx_seq_drawfrag_OBJECTS)
mgx_seq_drawfrag_LDADD = $(LDADD)
mgx_seq_drawfrag_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_mgx_seq_epsNB2taxons_OBJECTS = mgx-seq-epsNB2taxons.$(OBJEXT)
mgx_seq_epsNB2taxons_OBJECTS = $(am_mgx_seq_epsNB2taxons_OBJECTS)
mgx_seq_epsNB2taxons_LDADD = $(LDADD)
mgx_seq_epsNB2taxons_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_mgx_seq_fa2fq_OBJECTS = mgx-seq-fa2fq.$(OBJEXT) gzutil.$(OBJEXT)
mgx_seq_fa2fq_OBJECTS = $(am_mgx_seq_fa2fq_OBJECTS)
mgx_seq_fa2fq_LDADD = $(LDADD)
mgx_seq_fa2fq_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_mgx_seq_fa2libsvm_OBJECTS = mgx-seq-fa2libsvm.$(OBJEXT) \
	gzutil.$(OBJEXT)
mgx_seq_fa2libsvm_OBJECTS = $(am_mgx_seq_fa2libsvm_OBJECTS)
mgx_seq_fa2libsvm_LDADD = $(LDADD)
mgx_seq_fa2libsvm_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_mgx_seq_fa2vw_OBJECTS = mgx-seq-fa2vw.$(OBJEXT) gzutil.$(OBJEXT)
mgx_seq_fa2vw_OBJECTS = $(am_mgx_seq_fa2vw_OBJECTS)
mgx_seq_fa2vw_LDADD = $(LDADD)
mgx_seq_fa2vw_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_mgx_seq_fadesc_OBJECTS = mgx-seq-fadesc.$(OBJEXT) gzutil.$(OBJEXT)
mgx_seq_fadesc_OBJECTS = $(am_mgx_seq_fadesc_OBJECTS)
mgx_seq_fadesc_LDADD = $(LDADD)
mgx_seq_fadesc_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_mgx_seq_faget_OBJECTS = mgx-seq-faget.$(OBJEXT) gzutil.$(OBJEXT)
mgx_seq_faget_OBJECTS = $(am_mgx_seq_faget_OBJECTS)
mgx_seq_faget_LDADD = $(LDADD)
mgx_seq_faget_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_mgx_seq_famergpair_OBJECTS = mgx-seq-famergpair.$(OBJEXT) \
	gzutil.$(OBJEXT)
mgx_seq_famergpair_OBJECTS = $(am_mgx_seq_famergpair_OBJECTS)
mgx_seq_famergpair_LDADD = $(LDADD)
mgx_seq_famergpair_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_mgx_seq_famut_OBJECTS = mgx-seq-famut.$(OBJEXT) gzutil.$(OBJEXT)
mgx_seq_famut_OBJECTS = $(am_mgx_seq_famut_OBJECTS)
mgx_seq_famut_LDADD = $(LDADD)
mgx_seq_famut_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_mgx_seq_fasplit_OBJECTS = mgx-seq-fasplit.$(OBJEXT) \
	gzutil.$(OBJEXT)
mgx_seq_fasplit_OBJECTS = $(am_mgx_seq_fasplit_OBJECTS)
mgx_seq_fasplit_LDADD = $(LDADD)
mgx_seq_fasplit_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_mgx_seq_favar_OBJECTS = mgx-seq-favar.$(OBJEXT) gzutil.$(OBJEXT)
mgx_seq_favar_OBJECTS = $(am_mgx_seq_favar_OBJECTS)
mgx_seq_favar_LDADD = $(LDADD)
mgx_seq_favar_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_mgx_seq_fq2fa_OBJECTS = mgx-seq-fq2fa.$(OBJEXT) gzutil.$(OBJEXT)
mgx_seq_fq2fa_OBJECTS = $(am_mgx_seq_fq2fa_OBJECTS)
mgx_seq_fq2fa_LDADD = $(LDADD)
mgx_seq_fq2fa_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_mgx_seq_fqboot_OBJECTS = mgx-seq-fqboot.$(OBJEXT) gzutil.$(OBJEXT)
mgx_seq_fqboot_OBJECTS = $(am_mgx_seq_fqboot_OBJECTS)
mgx_seq_fqboot_LDADD = $(LDADD)
mgx_seq_fqboot_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_mgx_seq_fqdesc_OBJECTS = mgx-seq-fqdesc.$(OBJEXT) gzutil.$(OBJEXT)
mgx_seq_fqdesc_OBJECTS = $(am_mgx_seq_fqdesc_OBJECTS)
mgx_seq_fqdesc_LDADD = $(LDADD)
mgx_seq_fqdesc_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_mgx_seq_fqget_OBJECTS = mgx-seq-fqget.$(OBJEXT) gzutil.$(OBJEXT)
mgx_seq_fqget_OBJECTS = $(am_mgx_seq_fqget_OBJECTS)
mgx_seq_fqget_LDADD = $(LDADD)
mgx_seq_fqget_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_mgx_seq_fqmv_OBJECTS = mgx-seq-fqmv.$(OBJEXT) gzutil.$(OBJEXT)
mgx_seq_fqmv_OBJECTS = $(am_mgx_seq_fqmv_OBJECTS)
mgx_seq_fqmv_LDADD = $(LDADD)
mgx_seq_fqmv_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_mgx_seq_fqsim_OBJECTS = mgx-seq-fqsim.$(OBJEXT) gzutil.$(OBJEXT)
mgx_seq_fqsim_OBJECTS = $(am_mgx_seq_fqsim_OBJECTS)
mgx_seq_fqsim_LDADD = $(LDADD)
mgx_seq_fqsim_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_mgx_seq_fqtrim_OBJECTS = mgx-seq-fqtrim.$(OBJEXT) gzutil.$(OBJEXT)
mgx_seq_fqtrim_OBJECTS = $(am_mgx_seq_fqtrim_OBJECTS)
mgx_seq_fqtrim_LDADD = $(LDADD)
mgx_seq_fqtrim_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_mgx_seq_kmerdb_OBJECTS = mgx-seq-kmerdb.$(OBJEXT) kmer.$(OBJEXT)
mgx_seq_kmerdb_OBJECTS = $(am_mgx_seq_kmerdb_OBJECTS)
mgx_seq_kmerdb_LDADD = $(LDADD)
mgx_seq_kmerdb_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_mgx_seq_kmerdbdesc_OBJECTS = mgx-seq-kmerdbdesc.$(OBJEXT) \
	kmer.$(OBJEXT) taxo.$(OBJEXT) ncbi_taxo.$(OBJEXT) \
	simple_taxo.$(OBJEXT)
mgx_seq_kmerdbdesc_OBJECTS = $(am_mgx_seq_kmerdbdesc_OBJECTS)
mgx_seq_kmerdbdesc_LDADD = $(LDADD)
mgx_seq_kmerdbdesc_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_mgx_seq_kmernbfit_OBJECTS = mgx-seq-kmernbfit.$(OBJEXT) \
	kmer.$(OBJEXT) taxo.$(OBJEXT) ncbi_taxo.$(OBJEXT) \
	simple_taxo.$(OBJEXT)
mgx_seq_kmernbfit_OBJECTS = $(am_mgx_seq_kmernbfit_OBJECTS)
mgx_seq_kmernbfit_LDADD = $(LDADD)
mgx_seq_kmernbfit_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_mgx_seq_kmernbpred_OBJECTS = mgx-seq-kmernbpred.$(OBJEXT) \
	kmer.$(OBJEXT) taxo.$(OBJEXT) ncbi_taxo.$(OBJEXT) \
	simple_taxo.$(OBJEXT)
mgx_seq_kmernbpred_OBJECTS = $(am_mgx_seq_kmernbpred_OBJECTS)
mgx_seq_kmernbpred_LDADD = $(LDADD)
mgx_seq_kmernbpred_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_mgx_seq_kmertab_OBJECTS = mgx-seq-kmertab.$(OBJEXT) \
	gzutil.$(OBJEXT)
mgx_seq_kmertab_OBJECTS = $(am_mgx_seq_kmertab_OBJECTS)
mgx_seq_kmertab_LDADD = $(LDADD)
mgx_seq_kmertab_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_mgx_seq_uniprotid_OBJECTS = mgx-seq-uniprotid.$(OBJEXT) \
	gzutil.$(OBJEXT)
mgx_seq_uniprotid_OBJECTS = $(am_mgx_seq_uniprotid_OBJECTS)
mgx_seq_uniprotid_LDADD = $(LDADD)
mgx_seq_uniprotid_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp =
am__depfiles_maybe =
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(mgx_seq_bam2bh_SOURCES) $(mgx_seq_bam2readqc_SOURCES) \
	$(mgx_seq_bam2var_SOURCES) $(mgx_seq_baminfo_SOURCES) \
	$(mgx_seq_bams2pos_SOURCES) $(mgx_seq_bfclass_SOURCES) \
	$(mgx_seq_bfdb_SOURCES) $(mgx_seq_bwabh_SOURCES) \
	$(mgx_seq_drawfrag_SOURCES) $(mgx_seq_epsNB2taxons_SOURCES) \
	$(mgx_seq_fa2fq_SOURCES) $(mgx_seq_fa2libsvm_SOURCES) \
	$(mgx_seq_fa2vw_SOURCES) $(mgx_seq_fadesc_SOURCES) \
	$(mgx_seq_faget_SOURCES) $(mgx_seq_famergpair_SOURCES) \
	$(mgx_seq_famut_SOURCES) $(mgx_seq_fasplit_SOURCES) \
	$(mgx_seq_favar_SOURCES) $(mgx_seq_fq2fa_SOURCES) \
	$(mgx_seq_fqboot_SOURCES) $(mgx_seq_fqdesc_SOURCES) \
	$(mgx_seq_fqget_SOURCES) $(mgx_seq_fqmv_SOURCES) \
	$(mgx_seq_fqsim_SOURCES) $(mgx_seq_fqtrim_SOURCES) \
	$(mgx_seq_kmerdb_SOURCES) $(mgx_seq_kmerdbdesc_SOURCES) \
	$(mgx_seq_kmernbfit_SOURCES) $(mgx_seq_kmernbpred_SOURCES) \
	$(mgx_seq_kmertab_SOURCES) $(mgx_seq_uniprotid_SOURCES)
DIST_SOURCES = $(mgx_seq_bam2bh_SOURCES) $(mgx_seq_bam2readqc_SOURCES) \
	$(mgx_seq_bam2var_SOURCES) $(mgx_seq_baminfo_SOURCES) \
	$(mgx_seq_bams2pos_SOURCES) $(mgx_seq_bfclass_SOURCES) \
	$(mgx_seq_bfdb_SOURCES) $(mgx_seq_bwabh_SOURCES) \
	$(mgx_seq_drawfrag_SOURCES) $(mgx_seq_epsNB2taxons_SOURCES) \
	$(mgx_seq_fa2fq_SOURCES) $(mgx_seq_fa2libsvm_SOURCES) \
	$(mgx_seq_fa2vw_SOURCES) $(mgx_seq_fadesc_SOURCES) \
	$(mgx_seq_faget_SOURCES) $(mgx_seq_famergpair_SOURCES) \
	$(mgx_seq_famut_SOURCES) $(mgx_seq_fasplit_SOURCES) \
	$(mgx_seq_favar_SOURCES) $(mgx_seq_fq2fa_SOURCES) \
	$(mgx_seq_fqboot_SOURCES) $(mgx_seq_fqdesc_SOURCES) \
	$(mgx_seq_fqget_SOURCES) $(mgx_seq_fqmv_SOURCES) \
	$(mgx_seq_fqsim_SOURCES) $(mgx_seq_fqtrim_SOURCES) \
	$(mgx_seq_kmerdb_SOURCES) $(mgx_seq_kmerdbdesc_SOURCES) \
	$(mgx_seq_kmernbfit_SOURCES) $(mgx_seq_kmernbpred_SOURCES) \
	$(mgx_seq_kmertab_SOURCES) $(mgx_seq_uniprotid_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GDL_CONFIG = @GDL_CONFIG@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBGDL_CFLAGS = @LIBGDL_CFLAGS@
LIBGDL_LIBS = @LIBGDL_LIBS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MATH_LIB = @MATH_LIB@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__leading_dot = @am__leading_dot@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mixgenomix_VERSION = @mixgenomix_VERSION@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
LDADD = $(LIBGDL_LIBS) $(MATH_LIB) -L/Softs/bioinfo/lib/ -lpthread -lz -lbam # -lsparsehash
#LDADD = $(LIBGDL_LIBS) $(MATH_LIB) -lpthread -lz -lbam # -lsparsehash
INCLUDES = $(LIBGDL_CFLAGS) -I./ -I../ -I../utils

# Bloom-filter
mgx_seq_bfdb_SOURCES = mgx-seq-bfdb.c ../utils/gzutil.c ../utils/hash.c bloom.c fasta.c
mgx_seq_bfclass_SOURCES = mgx-seq-bfclass.c ../utils/gzutil.c ../utils/hash.c bloom.c fasta.c
# Bam
mgx_seq_bwabh_SOURCES = mgx-seq-bwabh.c
mgx_seq_bam2readqc_SOURCES = mgx-seq-bam2refqc.c
mgx_seq_bam2var_SOURCES = mgx-seq-bam2var.c
mgx_seq_bam2bh_SOURCES = mgx-seq-bams2bh.c
mgx_seq_bams2pos_SOURCES = mgx-seq-bams2pos.c
mgx_seq_baminfo_SOURCES = mgx-seq-baminfo.c  
#mgx_seq_bam2Stats_SOURCES     = mgx-seq-bam2Stats.c
# Fasta / Fastq
mgx_seq_faget_SOURCES = mgx-seq-faget.c ../utils/gzutil.c
mgx_seq_fadesc_SOURCES = mgx-seq-fadesc.c ../utils/gzutil.c
mgx_seq_famut_SOURCES = mgx-seq-famut.c ../utils/gzutil.c
mgx_seq_favar_SOURCES = mgx-seq-favar.c ../utils/gzutil.c
mgx_seq_fqdesc_SOURCES = mgx-seq-fqdesc.c ../utils/gzutil.c
mgx_seq_fqget_SOURCES = mgx-seq-fqget.c ../utils/gzutil.c
mgx_seq_fq2fa_SOURCES = mgx-seq-fq2fa.c ../utils/gzutil.c
mgx_seq_fa2fq_SOURCES = mgx-seq-fa2fq.c ../utils/gzutil.c
mgx_seq_fqtrim_SOURCES = mgx-seq-fqtrim.c ../utils/gzutil.c
mgx_seq_fqboot_SOURCES = mgx-seq-fqboot.c ../utils/gzutil.c
mgx_seq_fasplit_SOURCES = mgx-seq-fasplit.c ../utils/gzutil.c
mgx_seq_famergpair_SOURCES = mgx-seq-famergpair.c ../utils/gzutil.c
mgx_seq_fa2libsvm_SOURCES = mgx-seq-fa2libsvm.c ../utils/gzutil.c
mgx_seq_fa2vw_SOURCES = mgx-seq-fa2vw.c ../utils/gzutil.c
mgx_seq_fqsim_SOURCES = mgx-seq-fqsim.c ../utils/gzutil.c
mgx_seq_fqmv_SOURCES = mgx-seq-fqmv.c ../utils/gzutil.c
# Kmer
mgx_seq_kmertab_SOURCES = mgx-seq-kmertab.c ../utils/gzutil.c
mgx_seq_kmerdb_SOURCES = mgx-seq-kmerdb.c kmer.c
mgx_seq_kmernbfit_SOURCES = mgx-seq-kmernbfit.c kmer.c ../taxo/taxo.c ../taxo/ncbi_taxo.c ../taxo/simple_taxo.c
mgx_seq_kmernbpred_SOURCES = mgx-seq-kmernbpred.c kmer.c ../taxo/taxo.c ../taxo/ncbi_taxo.c ../taxo/simple_taxo.c
mgx_seq_kmerdbdesc_SOURCES = mgx-seq-kmerdbdesc.c kmer.c ../taxo/taxo.c ../taxo/ncbi_taxo.c ../taxo/simple_taxo.c
mgx_seq_epsNB2taxons_SOURCES = mgx-seq-epsNB2taxons.c
# db
mgx_seq_uniprotid_SOURCES = mgx-seq-uniprotid.c ../utils/gzutil.c
# drawfrag
mgx_seq_drawfrag_SOURCES = mgx-seq-drawfrag.c ../utils/gzutil.c
EXTRA_DIST = hash.h bloom.h
m4datadir = $(datadir)/aclocal
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu --ignore-deps seq/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu --ignore-deps seq/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
mgx-seq-bam2bh$(EXEEXT): $(mgx_seq_bam2bh_OBJECTS) $(mgx_seq_bam2bh_DEPENDENCIES) 
	@rm -f mgx-seq-bam2bh$(EXEEXT)
	$(LINK) $(mgx_seq_bam2bh_OBJECTS) $(mgx_seq_bam2bh_LDADD) $(LIBS)
mgx-seq-bam2readqc$(EXEEXT): $(mgx_seq_bam2readqc_OBJECTS) $(mgx_seq_bam2readqc_DEPENDENCIES) 
	@rm -f mgx-seq-bam2readqc$(EXEEXT)
	$(LINK) $(mgx_seq_bam2readqc_OBJECTS) $(mgx_seq_bam2readqc_LDADD) $(LIBS)
mgx-seq-bam2var$(EXEEXT): $(mgx_seq_bam2var_OBJECTS) $(mgx_seq_bam2var_DEPENDENCIES) 
	@rm -f mgx-seq-bam2var$(EXEEXT)
	$(LINK) $(mgx_seq_bam2var_OBJECTS) $(mgx_seq_bam2var_LDADD) $(LIBS)
mgx-seq-baminfo$(EXEEXT): $(mgx_seq_baminfo_OBJECTS) $(mgx_seq_baminfo_DEPENDENCIES) 
	@rm -f mgx-seq-baminfo$(EXEEXT)
	$(LINK) $(mgx_seq_baminfo_OBJECTS) $(mgx_seq_baminfo_LDADD) $(LIBS)
mgx-seq-bams2pos$(EXEEXT): $(mgx_seq_bams2pos_OBJECTS) $(mgx_seq_bams2pos_DEPENDENCIES) 
	@rm -f mgx-seq-bams2pos$(EXEEXT)
	$(LINK) $(mgx_seq_bams2pos_OBJECTS) $(mgx_seq_bams2pos_LDADD) $(LIBS)
mgx-seq-bfclass$(EXEEXT): $(mgx_seq_bfclass_OBJECTS) $(mgx_seq_bfclass_DEPENDENCIES) 
	@rm -f mgx-seq-bfclass$(EXEEXT)
	$(LINK) $(mgx_seq_bfclass_OBJECTS) $(mgx_seq_bfclass_LDADD) $(LIBS)
mgx-seq-bfdb$(EXEEXT): $(mgx_seq_bfdb_OBJECTS) $(mgx_seq_bfdb_DEPENDENCIES) 
	@rm -f mgx-seq-bfdb$(EXEEXT)
	$(LINK) $(mgx_seq_bfdb_OBJECTS) $(mgx_seq_bfdb_LDADD) $(LIBS)
mgx-seq-bwabh$(EXEEXT): $(mgx_seq_bwabh_OBJECTS) $(mgx_seq_bwabh_DEPENDENCIES) 
	@rm -f mgx-seq-bwabh$(EXEEXT)
	$(LINK) $(mgx_seq_bwabh_OBJECTS) $(mgx_seq_bwabh_LDADD) $(LIBS)
mgx-seq-drawfrag$(EXEEXT): $(mgx_seq_drawfrag_OBJECTS) $(mgx_seq_drawfrag_DEPENDENCIES) 
	@rm -f mgx-seq-drawfrag$(EXEEXT)
	$(LINK) $(mgx_seq_drawfrag_OBJECTS) $(mgx_seq_drawfrag_LDADD) $(LIBS)
mgx-seq-epsNB2taxons$(EXEEXT): $(mgx_seq_epsNB2taxons_OBJECTS) $(mgx_seq_epsNB2taxons_DEPENDENCIES) 
	@rm -f mgx-seq-epsNB2taxons$(EXEEXT)
	$(LINK) $(mgx_seq_epsNB2taxons_OBJECTS) $(mgx_seq_epsNB2taxons_LDADD) $(LIBS)
mgx-seq-fa2fq$(EXEEXT): $(mgx_seq_fa2fq_OBJECTS) $(mgx_seq_fa2fq_DEPENDENCIES) 
	@rm -f mgx-seq-fa2fq$(EXEEXT)
	$(LINK) $(mgx_seq_fa2fq_OBJECTS) $(mgx_seq_fa2fq_LDADD) $(LIBS)
mgx-seq-fa2libsvm$(EXEEXT): $(mgx_seq_fa2libsvm_OBJECTS) $(mgx_seq_fa2libsvm_DEPENDENCIES) 
	@rm -f mgx-seq-fa2libsvm$(EXEEXT)
	$(LINK) $(mgx_seq_fa2libsvm_OBJECTS) $(mgx_seq_fa2libsvm_LDADD) $(LIBS)
mgx-seq-fa2vw$(EXEEXT): $(mgx_seq_fa2vw_OBJECTS) $(mgx_seq_fa2vw_DEPENDENCIES) 
	@rm -f mgx-seq-fa2vw$(EXEEXT)
	$(LINK) $(mgx_seq_fa2vw_OBJECTS) $(mgx_seq_fa2vw_LDADD) $(LIBS)
mgx-seq-fadesc$(EXEEXT): $(mgx_seq_fadesc_OBJECTS) $(mgx_seq_fadesc_DEPENDENCIES) 
	@rm -f mgx-seq-fadesc$(EXEEXT)
	$(LINK) $(mgx_seq_fadesc_OBJECTS) $(mgx_seq_fadesc_LDADD) $(LIBS)
mgx-seq-faget$(EXEEXT): $(mgx_seq_faget_OBJECTS) $(mgx_seq_faget_DEPENDENCIES) 
	@rm -f mgx-seq-faget$(EXEEXT)
	$(LINK) $(mgx_seq_faget_OBJECTS) $(mgx_seq_faget_LDADD) $(LIBS)
mgx-seq-famergpair$(EXEEXT): $(mgx_seq_famergpair_OBJECTS) $(mgx_seq_famergpair_DEPENDENCIES) 
	@rm -f mgx-seq-famergpair$(EXEEXT)
	$(LINK) $(mgx_seq_famergpair_OBJECTS) $(mgx_seq_famergpair_LDADD) $(LIBS)
mgx-seq-famut$(EXEEXT): $(mgx_seq_famut_OBJECTS) $(mgx_seq_famut_DEPENDENCIES) 
	@rm -f mgx-seq-famut$(EXEEXT)
	$(LINK) $(mgx_seq_famut_OBJECTS) $(mgx_seq_famut_LDADD) $(LIBS)
mgx-seq-fasplit$(EXEEXT): $(mgx_seq_fasplit_OBJECTS) $(mgx_seq_fasplit_DEPENDENCIES) 
	@rm -f mgx-seq-fasplit$(EXEEXT)
	$(LINK) $(mgx_seq_fasplit_OBJECTS) $(mgx_seq_fasplit_LDADD) $(LIBS)
mgx-seq-favar$(EXEEXT): $(mgx_seq_favar_OBJECTS) $(mgx_seq_favar_DEPENDENCIES) 
	@rm -f mgx-seq-favar$(EXEEXT)
	$(LINK) $(mgx_seq_favar_OBJECTS) $(mgx_seq_favar_LDADD) $(LIBS)
mgx-seq-fq2fa$(EXEEXT): $(mgx_seq_fq2fa_OBJECTS) $(mgx_seq_fq2fa_DEPENDENCIES) 
	@rm -f mgx-seq-fq2fa$(EXEEXT)
	$(LINK) $(mgx_seq_fq2fa_OBJECTS) $(mgx_seq_fq2fa_LDADD) $(LIBS)
mgx-seq-fqboot$(EXEEXT): $(mgx_seq_fqboot_OBJECTS) $(mgx_seq_fqboot_DEPENDENCIES) 
	@rm -f mgx-seq-fqboot$(EXEEXT)
	$(LINK) $(mgx_seq_fqboot_OBJECTS) $(mgx_seq_fqboot_LDADD) $(LIBS)
mgx-seq-fqdesc$(EXEEXT): $(mgx_seq_fqdesc_OBJECTS) $(mgx_seq_fqdesc_DEPENDENCIES) 
	@rm -f mgx-seq-fqdesc$(EXEEXT)
	$(LINK) $(mgx_seq_fqdesc_OBJECTS) $(mgx_seq_fqdesc_LDADD) $(LIBS)
mgx-seq-fqget$(EXEEXT): $(mgx_seq_fqget_OBJECTS) $(mgx_seq_fqget_DEPENDENCIES) 
	@rm -f mgx-seq-fqget$(EXEEXT)
	$(LINK) $(mgx_seq_fqget_OBJECTS) $(mgx_seq_fqget_LDADD) $(LIBS)
mgx-seq-fqmv$(EXEEXT): $(mgx_seq_fqmv_OBJECTS) $(mgx_seq_fqmv_DEPENDENCIES) 
	@rm -f mgx-seq-fqmv$(EXEEXT)
	$(LINK) $(mgx_seq_fqmv_OBJECTS) $(mgx_seq_fqmv_LDADD) $(LIBS)
mgx-seq-fqsim$(EXEEXT): $(mgx_seq_fqsim_OBJECTS) $(mgx_seq_fqsim_DEPENDENCIES) 
	@rm -f mgx-seq-fqsim$(EXEEXT)
	$(LINK) $(mgx_seq_fqsim_OBJECTS) $(mgx_seq_fqsim_LDADD) $(LIBS)
mgx-seq-fqtrim$(EXEEXT): $(mgx_seq_fqtrim_OBJECTS) $(mgx_seq_fqtrim_DEPENDENCIES) 
	@rm -f mgx-seq-fqtrim$(EXEEXT)
	$(LINK) $(mgx_seq_fqtrim_OBJECTS) $(mgx_seq_fqtrim_LDADD) $(LIBS)
mgx-seq-kmerdb$(EXEEXT): $(mgx_seq_kmerdb_OBJECTS) $(mgx_seq_kmerdb_DEPENDENCIES) 
	@rm -f mgx-seq-kmerdb$(EXEEXT)
	$(LINK) $(mgx_seq_kmerdb_OBJECTS) $(mgx_seq_kmerdb_LDADD) $(LIBS)
mgx-seq-kmerdbdesc$(EXEEXT): $(mgx_seq_kmerdbdesc_OBJECTS) $(mgx_seq_kmerdbdesc_DEPENDENCIES) 
	@rm -f mgx-seq-kmerdbdesc$(EXEEXT)
	$(LINK) $(mgx_seq_kmerdbdesc_OBJECTS) $(mgx_seq_kmerdbdesc_LDADD) $(LIBS)
mgx-seq-kmernbfit$(EXEEXT): $(mgx_seq_kmernbfit_OBJECTS) $(mgx_seq_kmernbfit_DEPENDENCIES) 
	@rm -f mgx-seq-kmernbfit$(EXEEXT)
	$(LINK) $(mgx_seq_kmernbfit_OBJECTS) $(mgx_seq_kmernbfit_LDADD) $(LIBS)
mgx-seq-kmernbpred$(EXEEXT): $(mgx_seq_kmernbpred_OBJECTS) $(mgx_seq_kmernbpred_DEPENDENCIES) 
	@rm -f mgx-seq-kmernbpred$(EXEEXT)
	$(LINK) $(mgx_seq_kmernbpred_OBJECTS) $(mgx_seq_kmernbpred_LDADD) $(LIBS)
mgx-seq-kmertab$(EXEEXT): $(mgx_seq_kmertab_OBJECTS) $(mgx_seq_kmertab_DEPENDENCIES) 
	@rm -f mgx-seq-kmertab$(EXEEXT)
	$(LINK) $(mgx_seq_kmertab_OBJECTS) $(mgx_seq_kmertab_LDADD) $(LIBS)
mgx-seq-uniprotid$(EXEEXT): $(mgx_seq_uniprotid_OBJECTS) $(mgx_seq_uniprotid_DEPENDENCIES) 
	@rm -f mgx-seq-uniprotid$(EXEEXT)
	$(LINK) $(mgx_seq_uniprotid_OBJECTS) $(mgx_seq_uniprotid_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.c.o:
	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -c -o $@ $<

gzutil.o: ../utils/gzutil.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gzutil.o `test -f '../utils/gzutil.c' || echo '$(srcdir)/'`../utils/gzutil.c

gzutil.obj: ../utils/gzutil.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gzutil.obj `if test -f '../utils/gzutil.c'; then $(CYGPATH_W) '../utils/gzutil.c'; else $(CYGPATH_W) '$(srcdir)/../utils/gzutil.c'; fi`

hash.o: ../utils/hash.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hash.o `test -f '../utils/hash.c' || echo '$(srcdir)/'`../utils/hash.c

hash.obj: ../utils/hash.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o hash.obj `if test -f '../utils/hash.c'; then $(CYGPATH_W) '../utils/hash.c'; else $(CYGPATH_W) '$(srcdir)/../utils/hash.c'; fi`

taxo.o: ../taxo/taxo.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o taxo.o `test -f '../taxo/taxo.c' || echo '$(srcdir)/'`../taxo/taxo.c

taxo.obj: ../taxo/taxo.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o taxo.obj `if test -f '../taxo/taxo.c'; then $(CYGPATH_W) '../taxo/taxo.c'; else $(CYGPATH_W) '$(srcdir)/../taxo/taxo.c'; fi`

ncbi_taxo.o: ../taxo/ncbi_taxo.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ncbi_taxo.o `test -f '../taxo/ncbi_taxo.c' || echo '$(srcdir)/'`../taxo/ncbi_taxo.c

ncbi_taxo.obj: ../taxo/ncbi_taxo.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ncbi_taxo.obj `if test -f '../taxo/ncbi_taxo.c'; then $(CYGPATH_W) '../taxo/ncbi_taxo.c'; else $(CYGPATH_W) '$(srcdir)/../taxo/ncbi_taxo.c'; fi`

simple_taxo.o: ../taxo/simple_taxo.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o simple_taxo.o `test -f '../taxo/simple_taxo.c' || echo '$(srcdir)/'`../taxo/simple_taxo.c

simple_taxo.obj: ../taxo/simple_taxo.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o simple_taxo.obj `if test -f '../taxo/simple_taxo.c'; then $(CYGPATH_W) '../taxo/simple_taxo.c'; else $(CYGPATH_W) '$(srcdir)/../taxo/simple_taxo.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
